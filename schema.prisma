// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                    String      @id @default(cuid())
  name                  String      @default("")
  email                 String      @unique @default("")
  password              String
  role                  String?     @default("guest")
  reviews               Review[]    @relation("Review_user")
  quotes                Quote[]     @relation("Quote_user")
  complaints            Complaint[] @relation("Complaint_user")
  createdAt             DateTime?   @default(now())
  from_Business_manager Business[]  @relation("Business_manager")
}

model Business {
  id                           String           @id @default(uuid())
  name                         String           @default("")
  description                  String           @default("")
  industry                     String           @default("")
  contactEmail                 String           @default("")
  contactPhone                 String           @default("")
  website                      String           @default("")
  location                     String           @default("")
  address                      String           @default("")
  yearFounded                  Int?
  typeOfEntity                 String?
  businessHours                String           @default("")
  revenue                      Int?
  employeeCount                Int?
  keywords                     String           @default("")
  companyLinkedIn              String           @default("")
  companyFacebook              String           @default("")
  companyTwitter               String           @default("")
  technologiesUsed             String           @default("")
  sicCodes                     String           @default("")
  reviews                      Review[]         @relation("Review_business")
  complaints                   Complaint[]      @relation("Complaint_business")
  quotes                       Quote[]          @relation("Quote_business")
  createdAt                    DateTime?        @default(now())
  manager                      User?            @relation("Business_manager", fields: [managerId], references: [id])
  managerId                    String?          @map("manager")
  from_ComplaintReply_business ComplaintReply[] @relation("ComplaintReply_business")
  from_ReviewReply_business    ReviewReply[]    @relation("ReviewReply_business")
  from_QuoteReply_business     QuoteReply[]     @relation("QuoteReply_business")

  @@index([managerId])
}

model Complaint {
  id          String           @id @default(cuid())
  user        User?            @relation("Complaint_user", fields: [userId], references: [id])
  userId      String?          @map("user")
  isAnonymous String?          @default("false")
  subject     String           @default("")
  content     String           @default("")
  business    Business?        @relation("Complaint_business", fields: [businessId], references: [id])
  businessId  String?          @map("business")
  status      String?          @default("1")
  createdAt   DateTime?        @default(now())
  replies     ComplaintReply[] @relation("ComplaintReply_complaint")

  @@index([userId])
  @@index([businessId])
}

model Review {
  id               String        @id @default(cuid())
  user             User?         @relation("Review_user", fields: [userId], references: [id])
  userId           String?       @map("user")
  isAnonymous      String?       @default("false")
  rating           String?       @default("5")
  content          String        @default("")
  business         Business?     @relation("Review_business", fields: [businessId], references: [id])
  businessId       String?       @map("business")
  moderationStatus String?       @default("2")
  createdAt        DateTime?     @default(now())
  replies          ReviewReply[] @relation("ReviewReply_review")

  @@index([userId])
  @@index([businessId])
}

model Quote {
  id         String       @id @default(cuid())
  user       User?        @relation("Quote_user", fields: [userId], references: [id])
  userId     String?      @map("user")
  service    String       @default("")
  message    String       @default("")
  business   Business?    @relation("Quote_business", fields: [businessId], references: [id])
  businessId String?      @map("business")
  status     String?      @default("pending")
  replies    QuoteReply[] @relation("QuoteReply_quote")
  createdAt  DateTime?    @default(now())

  @@index([userId])
  @@index([businessId])
}

model ComplaintReply {
  id          String     @id @default(cuid())
  content     String     @default("")
  complaint   Complaint? @relation("ComplaintReply_complaint", fields: [complaintId], references: [id])
  complaintId String?    @map("complaint")
  business    Business?  @relation("ComplaintReply_business", fields: [businessId], references: [id])
  businessId  String?    @map("business")
  createdAt   DateTime?  @default(now())

  @@index([complaintId])
  @@index([businessId])
}

model ReviewReply {
  id         String    @id @default(cuid())
  content    String    @default("")
  review     Review?   @relation("ReviewReply_review", fields: [reviewId], references: [id])
  reviewId   String?   @map("review")
  business   Business? @relation("ReviewReply_business", fields: [businessId], references: [id])
  businessId String?   @map("business")
  createdAt  DateTime? @default(now())

  @@index([reviewId])
  @@index([businessId])
}

model QuoteReply {
  id         String    @id @default(cuid())
  content    String    @default("")
  quote      Quote?    @relation("QuoteReply_quote", fields: [quoteId], references: [id])
  quoteId    String?   @map("quote")
  business   Business? @relation("QuoteReply_business", fields: [businessId], references: [id])
  businessId String?   @map("business")
  createdAt  DateTime? @default(now())

  @@index([quoteId])
  @@index([businessId])
}
